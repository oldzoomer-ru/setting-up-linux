---
- name: Universal System Configuration Playbook
  hosts: all
  become: yes
  vars:
    journald_limit: "50M"
    chrome_url:
      Debian: "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
      RedHat: "https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm"
    rpmfusion_url:
      free: "https://download1.rpmfusion.org/free/el/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm"
      nonfree: "https://download1.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm"
    mscorefonts_url: "https://downloads.sourceforge.net/project/mscorefonts2/rpms/msttcore-fonts-installer-2.6-1.noarch.rpm"
    epel_url: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
    reboot_required: false

  tasks:
    - name: Configure journald SystemMaxUse
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf
        regexp: '^#?SystemMaxUse='
        line: 'SystemMaxUse={{ journald_limit }}'
        backup: yes
        create: yes
      notify: restart journald

    - name: Configure journald compression
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf
        regexp: '^#?Compress='
        line: 'Compress=yes'
        backup: yes
        create: yes
      notify: restart journald

    - name: Configure journald storage
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf
        regexp: '^#?Storage='
        line: 'Storage=persistent'
        backup: yes
        create: yes
      notify: restart journald

    - name: Install Flatpak
      ansible.builtin.package:
        name: flatpak
        state: present
      notify: request reboot

    - name: Add Flathub remote (using community.general)
      community.general.flatpak_remote:
        name: flathub
        flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
        state: present
      notify: request reboot

    - name: Install Chrome (Debian)
      ansible.builtin.apt:
        deb: "{{ chrome_url.Debian }}"
        state: present
      when: ansible_os_family == 'Debian'

    - name: Install Chrome (RHEL)
      ansible.builtin.dnf:
        name: "{{ chrome_url.RedHat }}"
        state: present
        disable_gpg_check: yes
      when: ansible_os_family == 'RedHat'

    - name: Configure RHEL repositories
      block:
        - name: Install EPEL repository (RHEL only)
          ansible.builtin.dnf:
            name: "{{ epel_url }}"
            state: present
            disable_gpg_check: yes
          when: ansible_distribution != 'Fedora'

        - name: Install RPM Fusion free repository
          ansible.builtin.dnf:
            name: "{{ rpmfusion_url.free }}"
            state: present
            disable_gpg_check: yes
          notify: request reboot

        - name: Install RPM Fusion non-free repository
          ansible.builtin.dnf:
            name: "{{ rpmfusion_url.nonfree }}"
            state: present
            disable_gpg_check: yes
          notify: request reboot
      when: ansible_os_family == "RedHat"

    - name: Install Microsoft Core Fonts (RHEL)
      ansible.builtin.dnf:
        name: "{{ mscorefonts_url }}"
        state: present
        disable_gpg_check: yes
      when: ansible_os_family == "RedHat"

    - name: Install multimedia packages
      block:
        - name: Install RHEL codecs
          ansible.builtin.dnf:
            name:
              - ffmpeg
              - gstreamer1-plugins-ugly
              - gstreamer1-plugins-bad-free
              - gstreamer1-plugins-bad-freeworld
              - gstreamer1-plugins-good
              - gstreamer1-plugins-base
            state: present
          when: ansible_os_family == "RedHat"

        - name: Install Debian codecs
          ansible.builtin.apt:
            name:
              - ffmpeg
              - libavcodec-extra
              - gstreamer1.0-libav
              - gstreamer1.0-plugins-ugly
              - gstreamer1.0-plugins-good
              - gstreamer1.0-plugins-bad
            state: present
          when: ansible_os_family == "Debian"

    - name: Install Timeshift
      ansible.builtin.package:
        name: timeshift
        state: present

    - name: Configure rtw88 kernel module
      community.general.modprobe:
        name: rtw88_core
        params: "disable_lps_deep=y"
        state: present
        persistent: present
      notify: request reboot

    - name: Clean up temporary packages (Debian)
      ansible.builtin.apt:
        autoremove: yes
        autoclean: yes
      when: ansible_os_family == 'Debian'

    - name: Clean up temporary packages (RHEL)
      ansible.builtin.dnf:
        autoremove: yes
      when: ansible_os_family == 'RedHat'

    - name: Flush handlers (final)
      meta: flush_handlers

    - name: Reboot system if required
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible after system configuration changes"
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
      when: reboot_required

  handlers:
    - name: request reboot
      ansible.builtin.set_fact:
        reboot_required: true

    - name: restart journald
      ansible.builtin.systemd:
        name: systemd-journald
        state: restarted
